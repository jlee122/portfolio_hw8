{"version":3,"sources":["Components/Tab.js","Components/Tablist.js","Components/Home.js","Components/About.js","Components/Resume.js","Components/Projects.js","config.js","Components/Guestbook.js","Components/Movie.js","Components/AddMovie.js","Components/CreateList.js","Components/Demo.js","Components/Body.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","className","style","this","onClick","changeTab","bind","title","Component","Tablist","tabs","map","Home","src","alt","About","Resume","width","Projects","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","options","value","label","Guestbook","state","name","desc","msg","posts","handleChange","handleSubmit","event","undefined","setState","target","preventDefault","itemsRef","database","ref","time","ServerValue","TIMESTAMP","Date","post","toLocaleString","push","on","snapshot","items","val","newState","item","prevProps","prevState","shouldUpdate","onSubmit","type","required","minlength","maxlength","onChange","email","key","Movie","movies","lists","isOpen","movie","currentList","movieSearch","grid","visible","showModal","hideModal","addToList","displayList","loadMore","orderByChild","once","then","toLowerCase","includes","director","rating","poster","v","list","itemRef","equalTo","exist","movieID","remove","limit","limitToFirst","moviesInList","Dropdown","drop","Toggle","variant","Menu","Item","as","placeholder","Button","Modal","show","onHide","Header","Title","Body","Footer","deleteMovie","axios","require","AddMovie","exists","console","log","get","res","data","imdbID","toString","catch","e","CreateList","addList","d3","nodes","links","replace","group","actors","movieIndex","findIndex","d","i","actor","substring","length","actorIndex","source","Demo","drag","simulation","active","alphaTarget","restart","fx","x","fy","y","obj_links","Object","create","obj_nodes","svg","attr","defs","append","node","link","selectAll","join","Math","sqrt","forceSimulation","force","forceLink","index","distance","forceManyBody","forceCenter","height","actorName","select","color","call","text","document","getElementById","appendChild","chart","displayContent","newList","href","icon","faGithub","faLinkedin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"6RAoBeA,G,OAlBf,4MACIC,WAAa,WACT,OAAG,EAAKC,MAAMC,IAAIC,IAAM,EAAKF,MAAMG,UACxB,CAACC,gBAAiB,QAGlB,CAACA,gBAAiB,UANrC,uDAUQ,OACI,yBAAKC,UAAU,MAAMC,MAAOC,KAAKR,aAC7BS,QAASD,KAAKP,MAAMS,UAAUC,KAAKH,KAAMA,KAAKP,MAAMC,IAAIC,KACxD,wBAAIG,UAAU,aAAaE,KAAKP,MAAMC,IAAIU,YAb1D,GAAyBC,cCUVC,EATf,uKACc,IAAD,OACL,OAAON,KAAKP,MAAMc,KAAKC,KAAI,SAACd,GAAD,OACvB,kBAAC,EAAD,CAAKA,IAAKA,EACVE,UAAW,EAAKH,MAAMG,UACtBM,UAAW,EAAKT,MAAMS,mBALlC,GAA6BG,aCcdI,EAff,uKAEQ,OACI,yBAAKX,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKY,IAAI,WAAWC,IAAI,UAE5B,yBAAKb,UAAU,aACX,gDACA,wEATpB,GAA0BO,aCeXO,EAff,uKAEQ,OACI,yBAAKd,UAAU,SACX,yBAAKA,UAAU,iBACX,yBAAKY,IAAI,iBAEb,yBAAKZ,UAAU,cACX,wCACA,kHATpB,GAA2BO,aCwBZQ,EAxBf,uKAEQ,OACI,yBAAKf,UAAU,eACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cACX,yBAAKY,IAAI,gBAAgBI,MAAM,WAEnC,yBAAKhB,UAAU,gBACX,kDACA,gVAGR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cAAa,yBAAKY,IAAI,8BACrC,yBAAKZ,UAAU,gBACX,gEACA,wVAjBxB,GAA4BO,a,yBCiCbU,EA/Bf,uKAEQ,OACI,kBAAC,IAAD,KACA,yBAAKjB,UAAU,iBACX,yBAAKA,UAAU,eACX,yBAAKY,IAAI,eAEb,yBAAKZ,UAAU,eACX,yBAAKY,IAAI,qBAEb,yBAAKZ,UAAU,eACX,yBAAKY,IAAI,qBAEb,yBAAKZ,UAAU,eACX,yBAAKY,IAAI,qBAEb,yBAAKZ,UAAU,eACX,yBAAKY,IAAI,qBAEb,yBAAKZ,UAAU,eACX,yBAAKY,IAAI,sBAGjB,kBAAC,IAAD,WAxBZ,GAA8BL,a,0CCO9BW,IAASC,cATM,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBACnBC,MAAO,+CAGIR,QAAf,ECRMS,EAAU,CACZ,CAAEC,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,KAAMC,MAAO,OAsIXC,EAnIf,kDACI,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAACC,KAAM,GAAIC,KAAM,GAAIC,IAAK,GAAIP,QAAS,GAAIQ,MAAO,IAE/D,EAAKC,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBALV,EADlB,yDASiBiC,QACUC,IAAhBD,EAAMV,MACL1B,KAAKsC,SAAL,eAAgBF,EAAMG,OAAOT,KAAOM,EAAMG,OAAOb,QAEjD1B,KAAKsC,SAAS,CAACb,QAASW,EAAMV,UAb1C,mCAgBiBU,GACTA,EAAMI,iBACN,IAAMC,EAAWzB,EAAS0B,WAAWC,IAAI,QAErCC,GADI5B,EAAS0B,SAASG,YAAYC,UAC3B,IAAIC,MACTC,EAAO,CACTlB,KAAM9B,KAAK6B,MAAMC,KACjBC,KAAM/B,KAAK6B,MAAME,KACjBC,IAAKhC,KAAK6B,MAAMG,IAChBP,QAASzB,KAAK6B,MAAMJ,QACpBmB,KAAMA,EAAKK,kBAEfR,EAASS,KAAKF,GACdhD,KAAKsC,SAAS,CACVR,KAAM,GAAIC,KAAM,GAAIC,IAAK,OA9BrC,0CAiCyB,IAAD,OACChB,EAAS0B,WAAWC,IAAI,QAChCQ,GAAG,SAAS,SAACC,GACpB,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQH,EACfE,EAASL,KAAK,CACZvD,GAAI6D,EACJ1B,KAAMuB,EAAMG,GAAM1B,KAClBC,KAAMsB,EAAMG,GAAMzB,KAClBC,IAAKqB,EAAMG,GAAMxB,IACjBP,QAAS4B,EAAMG,GAAM/B,QACrBmB,KAAMS,EAAMG,GAAMZ,OAItB,EAAKN,SAAS,CACZL,MAAOsB,SAlDnB,yCAsDuBE,EAAWC,EAAWN,GAAU,IAAD,OAG3CpD,KAAK6B,MAAM8B,cAAgBD,EAAUC,cAEnB3C,EAAS0B,WAAWC,IAAI,QAChCQ,GAAG,SAAS,SAACC,GACtB,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQH,EACbE,EAASL,KAAK,CACdvD,GAAI6D,EACJ1B,KAAMuB,EAAMG,GAAM1B,KAClBC,KAAMsB,EAAMG,GAAMzB,KAClBC,IAAKqB,EAAMG,GAAMxB,IACjBP,QAAS4B,EAAMG,GAAM/B,QACrBmB,KAAMS,EAAMG,GAAMZ,OAGtB,EAAKN,SAAS,CACVL,MAAOsB,SA1EvB,+BAgFQ,OACI,yBAAKzD,UAAU,aACX,yBAAKA,UAAU,aACX,wBAAIH,GAAG,aAAP,0DACA,0BAAMiE,SAAU5D,KAAKmC,cACjB,oDAEI,2BAAO0B,KAAK,OAAO/B,KAAK,OAAOgC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKtC,MAAO1B,KAAK6B,MAAMC,KAAMmC,SAAUjE,KAAKkC,gBAEhH,kEAEI,2BAAO2B,KAAK,OAAO/B,KAAK,OAAOJ,MAAO1B,KAAK6B,MAAME,KAAMkC,SAAUjE,KAAKkC,gBAE1E,kEAEI,2BAAO2B,KAAK,OAAO/B,KAAK,MAAMgC,UAAQ,EAACC,UAAU,KAAKC,UAAU,MAAMtC,MAAO1B,KAAK6B,MAAMG,IAAKiC,SAAUjE,KAAKkC,gBAEhH,mHAEI,kBAAC,IAAD,CAAQJ,KAAK,UAAUgC,UAAQ,EAACrC,QAASA,EAASwC,SAAUjE,KAAKkC,gBAErE,0IAEI,2BAAO2B,KAAK,OAAOK,MAAM,WAE7B,2BAAOL,KAAK,SAASnC,MAAM,mBAGnC,yBAAK5B,UAAU,SACX,yBAAKA,UAAU,QACX,4BACKE,KAAK6B,MAAMI,MAAMzB,KAAI,SAACwC,GACnB,GAAqB,QAAjBA,EAAKvB,QACL,OACI,wBAAI0C,IAAKnB,EAAKrD,IACV,4BAAKqD,EAAKJ,MACV,4BAAKI,EAAKlB,MACV,4BAAKkB,EAAKjB,MACV,2BAAIiB,EAAKhB,iBAtHrD,GAA+B3B,a,iDCyPhB+D,EA1Pf,kDACI,aAAe,IAAD,8BACV,gBACKvC,MAAQ,CACTwC,OAAQ,GACRC,MAAO,GACPC,QAAQ,EACRC,MAAO,GACPC,YAAa,MACbC,YAAa,GACbC,KAAM,iBACNC,QAAS,EACTjB,cAAc,GAElB,EAAKkB,UAAY,EAAKA,UAAU1E,KAAf,gBACjB,EAAK2E,UAAY,EAAKA,UAAU3E,KAAf,gBACjB,EAAK4E,UAAY,EAAKA,UAAU5E,KAAf,gBACjB,EAAK6E,YAAc,EAAKA,YAAY7E,KAAjB,gBACnB,EAAK+B,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBACpB,EAAK8E,SAAW,EAAKA,SAAS9E,KAAd,gBAnBN,EADlB,yDAsBiBiC,GACTpC,KAAKsC,SAAS,CAAEoC,YAAatC,EAAMG,OAAOb,UAvBlD,mCAyBiBU,GAAQ,IAAD,OAChBA,EAAMI,iBACUxB,EAAS0B,WAAWC,IAAI,UAChCuC,aAAa,SAASC,KAAK,SAASC,MAAK,SAAChC,GAC9C,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQH,EAAO,CACZA,EAAMG,GAAMpD,MAAMiF,cACrBC,SAAS,EAAKzD,MAAM6C,cACrBnB,EAASL,KAAK,CACVvD,GAAI6D,EACJpD,MAAOiD,EAAMG,GAAMpD,MACnBmF,SAAUlC,EAAMG,GAAM+B,SACtBC,OAAQnC,EAAMG,GAAMgC,OACpBC,OAAQpC,EAAMG,GAAMiC,SAIhC,EAAKnD,SAAS,CAAC+B,OAAQd,IACvB,EAAKjB,SAAS,CAACoC,YAAa,UA5CxC,iCAgDQ,IAAIgB,EAAI1F,KAAK6B,MAAM+C,QAAU,EAC7B5E,KAAKsC,SAAS,CAACsC,QAASc,EAAGf,KAAM,iBAAkBhB,cAAc,MAjDzE,yEAmDoBhE,GAnDpB,iFAoDcK,KAAKsC,SAAS,CAACkC,MAAO7E,IApDpC,QAqDiC,IAAtBK,KAAK6B,MAAM0C,QACVvE,KAAKsC,SAAS,CAACiC,QAAQ,IAtDnC,0IA0DiC,IAAtBvE,KAAK6B,MAAM0C,QACVvE,KAAKsC,SAAS,CAACiC,QAAQ,MA3DnC,gCA8DcoB,GAAO,IAAD,OACNC,EAAU5E,EAAS0B,WAAWC,IAAI,QACxCiD,EAAQV,aAAa,QAAQW,QAAQF,GAAMR,KAAK,SAASC,MAAK,SAAChC,GAC3D,IAAIC,EAAQD,EAASE,MACjBwC,GAAQ,EACZ,IAAK,IAAItC,KAAQH,EACVA,EAAMG,GAAMuC,SAAW,EAAKlE,MAAM2C,MAAM7E,KACvCmG,GAAQ,GAGZA,GACAF,EAAQ1C,KAAK,CACT6C,QAAS,EAAKlE,MAAM2C,MAAM7E,GAC1BS,MAAO,EAAKyB,MAAM2C,MAAMpE,MACxBuF,KAAMA,OAIlB3F,KAAK8E,cAhFb,kCAkFgBnF,GACQqB,EAAS0B,WAAWC,IAAI,UAAUhD,GAC1CqG,SACQhF,EAAS0B,WAAWC,IAAI,QAChCuC,aAAa,WAAWW,QAAQlG,GAAIwF,KAAK,SAASC,MAAK,SAAChC,GAC5D,IAAIC,EAAQD,EAASE,MACrB,IAAK,IAAIE,KAAQH,EACbrC,EAAS0B,WAAWC,IAAI,QAAQa,GAAMwC,YAG9ChG,KAAK8E,cA5Fb,2EA8FsBa,GA9FtB,uFA+FgB3F,KAAK6B,MAAM8C,KACnB3E,KAAKsC,SAAS,CAACsC,QAAS,IACpBqB,EAA2B,EAAnBjG,KAAK6B,MAAM+C,QACZ,OAARe,EAlGX,gBAmG6B3E,EAAS0B,WAAWC,IAAI,UAChCuD,aAAaD,GAAO9C,GAAG,SAAS,SAACC,GACtC,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQH,EACbE,EAASL,KAAK,CACVvD,GAAI6D,EACJpD,MAAOiD,EAAMG,GAAMpD,MACnBmF,SAAUlC,EAAMG,GAAM+B,SACtBC,OAAQnC,EAAMG,GAAMgC,OACpBC,OAAQpC,EAAMG,GAAMiC,SAG5B,EAAKnD,SAAS,CACV+B,OAAQd,EACRkB,YAAakB,OAlHjC,8BAsHkBC,EAAU5E,EAAS0B,WAAWC,IAAI,QACpCwD,EAAe,GACf5C,EAAW,GAxH3B,UAyHkBqC,EAAQV,aAAa,QAAQW,QAAQF,GAAMO,aAAaD,GAAOd,KAAK,SAASC,MAAK,SAAChC,GACrF,IAAIC,EAAQD,EAASE,MACrB,IAAK,IAAIE,KAAQH,EACb8C,EAAajD,KAAKG,EAAMG,GAAMuC,SAHgE,eAKzFvB,GACLxD,EAAS0B,WAAWC,IAAI,UAAUwD,EAAa3B,IAAQW,KAAK,SAASC,MAAK,SAAChC,GACvE,IAAII,EAAOJ,EAASE,MACpBC,EAASL,KAAK,CACVvD,GAAIwG,EAAa3B,GACjBpE,MAAOoD,EAAKpD,MACZmF,SAAU/B,EAAK+B,SACfC,OAAQhC,EAAKgC,OACbC,OAAQjC,EAAKiC,aARzB,IAAK,IAAIjB,KAAS2B,EAAc,EAAvB3B,MA9HzB,QA2IYxE,KAAKsC,SAAS,CACV+B,OAAQd,EACRkB,YAAakB,IA7I7B,kJAiJyB,IAAD,OAChB3F,KAAKsC,SAAS,CAAEgC,MAAOtE,KAAKP,MAAM6E,QACjBtD,EAAS0B,WAAWC,IAAI,UAEhCuD,aADG,GACiB/C,GAAG,SAAS,SAACC,GACtC,IAAIC,EAAQD,EAASE,MACjBC,EAAW,GACf,IAAK,IAAIC,KAAQH,EACbE,EAASL,KAAK,CACVvD,GAAI6D,EACJpD,MAAOiD,EAAMG,GAAMpD,MACnBmF,SAAUlC,EAAMG,GAAM+B,SACtBC,OAAQnC,EAAMG,GAAMgC,OACpBC,OAAQpC,EAAMG,GAAMiC,SAG5B,EAAKnD,SAAS,CACV+B,OAAQd,SAlKxB,yCAsKuBE,EAAWC,EAAWN,GAG9BpD,KAAK6B,MAAM8B,cAAgBD,EAAUC,cAEpC3D,KAAKgF,YAAYhF,KAAK6B,MAAM4C,eA3K5C,+BAgLc,IAAD,OACL,OACI,6BACI,yBAAK3E,UAAU,gBACX,yBAAKA,UAAU,iBACX,kBAACsG,EAAA,EAAD,CAAUC,KAAK,QACX,kBAACD,EAAA,EAASE,OAAV,CAAiBC,QAAQ,UAAU5G,GAAG,oBACjCK,KAAK6B,MAAM4C,aAEhB,kBAAC2B,EAAA,EAASI,KAAV,KACKxG,KAAK6B,MAAMyC,MAAM9D,KAAI,SAACmF,GACnB,OACI,kBAACS,EAAA,EAASK,KAAV,CAAeC,GAAG,SAASzG,QAAS,kBAAM,EAAK+E,YAAYW,KAAQA,SAMvF,yBAAK7F,UAAU,cACX,0BAAMA,UAAU,eAAe8D,SAAU5D,KAAKmC,cAC1C,2BAAO0B,KAAK,OAAOnC,MAAO1B,KAAK6B,MAAM6C,YAAaiC,YAAY,eAAe1C,SAAUjE,KAAKkC,eAC5F,2BAAO2B,KAAK,SAASnC,MAAM,cAK3C,yBAAK5B,UAAU,aAAaC,MAAO,CAAE,wBAAyBC,KAAK6B,MAAM8C,OAEpE3E,KAAK6B,MAAMwC,OAAO7D,KAAI,SAACb,GACpB,OACI,yBAAKG,UAAU,SACX,yBAAKY,IAAKf,EAAG8F,OAAQxF,QAAS,kBAAM,EAAK4E,UAAUlF,WAKnE,kBAACiH,EAAA,EAAD,CAAQ9G,UAAU,OAAOyG,QAAQ,UAAUtG,QAASD,KAAKiF,UAAzD,aACI,kBAAC,IAAD,MACA,kBAAC4B,EAAA,EAAD,CAAOC,KAAM9G,KAAK6B,MAAM0C,OAAQwC,OAAQ/G,KAAK8E,WACzC,kBAAC+B,EAAA,EAAMG,OAAP,KACI,kBAACH,EAAA,EAAMI,MAAP,KAAcjH,KAAK6B,MAAM2C,MAAMpE,QAEnC,kBAACyG,EAAA,EAAMK,KAAP,KACI,yBAAKxG,IAAKV,KAAK6B,MAAM2C,MAAMiB,SAC3B,yBAAK3F,UAAU,QACX,4CAAkBE,KAAK6B,MAAM2C,MAAMgB,QACnC,yCAAexF,KAAK6B,MAAM2C,MAAMe,YAGxC,kBAACsB,EAAA,EAAMM,OAAP,KACI,kBAACf,EAAA,EAAD,CAAUC,KAAK,MACX,kBAACD,EAAA,EAASE,OAAV,CAAiBC,QAAQ,UAAU5G,GAAG,sBAAtC,eAIA,kBAACyG,EAAA,EAASI,KAAV,KACKxG,KAAK6B,MAAMyC,MAAM9D,KAAI,SAACmF,GACnB,GAAY,QAATA,EACC,OACI,kBAACS,EAAA,EAASK,KAAV,CAAeC,GAAG,SAASzG,QAAS,kBAAM,EAAK8E,UAAUY,KAAQA,QAMrF,kBAACiB,EAAA,EAAD,CAAQL,QAAQ,SAAStG,QAAS,kBAAM,EAAKmH,YAAY,EAAKvF,MAAM2C,MAAM7E,MAA1E,UACA,kBAACiH,EAAA,EAAD,CAAQL,QAAQ,YAAYtG,QAASD,KAAK8E,WAA1C,iBAlPxB,GAA2BzE,aCLrBgH,EAAQC,EAAQ,KA6DPC,EA3Df,kDACI,aAAe,IAAD,8BACV,gBACK1F,MAAQ,CAAEkE,QAAS,IACxB,EAAK7D,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBAJV,EADlB,yDAQiBiC,GACTpC,KAAKsC,SAAS,CAACyD,QAAS3D,EAAMG,OAAOb,UAT7C,mCAWiBU,GAAQ,IAAD,OAChBA,EAAMI,iBACN,IAAMoD,EAAU5E,EAAS0B,WAAWC,IAAI,UACxCiD,EAAQV,aAAa,UAAUW,QAAQ7F,KAAK6B,MAAMkE,SAASZ,KAAK,SAASC,MAAK,SAAChC,GAC/DA,EAASE,MAChBF,EAASoE,SAqBVC,QAAQC,IAAI,iBApBZL,EAAMM,IAAI,8CAAgD,EAAK9F,MAAMkE,SAASX,MAAK,SAACwC,GAChF,IAAMC,EAAOD,EAAIC,KACXrD,EAAQ,CACVsD,OAAQ,EAAKjG,MAAMkE,QACnB3F,MAAOyH,EAAI,MACXtC,SAAUsC,EAAI,SACdrC,OAAQqC,EAAI,WACZpC,OAAQoC,EAAI,OAAWE,YAE3BnC,EAAQ1C,KAAKsB,GACb,EAAKlC,SAAS,CACVyD,QAAS,QAEdiC,OAAM,SAACC,GACN,EAAK3F,SAAS,CACVyD,QAAS,KAEb0B,QAAQC,IAAIO,WAlChC,+BA4CQ,OACI,6BACI,yBAAKnI,UAAU,oBACX,+CACA,+FAEJ,0BAAMA,UAAU,cAAc8D,SAAU5D,KAAKmC,cACzC,2BAAO0B,KAAK,OAAOnC,MAAO1B,KAAK6B,MAAMkE,QAASY,YAAY,UAAU1C,SAAUjE,KAAKkC,eACnF,2BAAO2B,KAAK,SAASnC,MAAM,iBApD/C,GAA8BrB,aC4Cf6H,EA3Cf,kDACI,aAAe,IAAD,8BACV,gBACKrG,MAAQ,CAAEyC,MAAO,GACPlE,MAAO,IAEtB,EAAK8B,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBANV,EADlB,gEAUQH,KAAKsC,SAAS,CAAEgC,MAAOtE,KAAKP,MAAM6E,UAV1C,mCAYiBlC,GACTpC,KAAKsC,SAAS,CAAClC,MAAOgC,EAAMG,OAAOb,UAb3C,mCAeiBU,GACTA,EAAMI,iBACN,IAAMmD,EAAO3F,KAAK6B,MAAMyC,MACxBqB,EAAKzC,KAAKlD,KAAK6B,MAAMzB,OACrBJ,KAAKsC,SAAS,CACVgC,MAAOqB,EACPvF,MAAO,KAEXJ,KAAKP,MAAM0I,QAAQhI,KAAKH,KAAMA,KAAK6B,MAAMzB,OACzCJ,KAAK6B,MAAMzB,MAAQ,KAxB3B,+BA2BQ,OACI,6BACI,yBAAKN,UAAU,eACX,2DACA,+FAEJ,0BAAMA,UAAU,aAAa8D,SAAU5D,KAAKmC,cACxC,2BAAO0B,KAAK,OAAOnC,MAAO1B,KAAK6B,MAAMzB,MAAOuG,YAAY,aAAa1C,SAAUjE,KAAKkC,eACpF,2BAAO2B,KAAK,SAASnC,MAAM,iBAnC/C,GAAgCrB,aCH5B+H,EAAKd,EAAQ,KACXO,EAAO,CACTQ,MAAO,GACPC,MAAO,IAEKtH,EAAS0B,WAAWC,IAAI,YAChCwC,KAAK,SAASC,MAAK,SAAChC,GACxB,IAAIC,EAAQD,EAASE,MADgB,WAE5BE,GACL,IAAIpD,EAAQiD,EAAMG,GAAMpD,MAAMmI,QAAQ,KAAM,KAC5CV,EAAKQ,MAAMnF,KAAK,CACZpB,KAAM1B,EACNqF,OAAQpC,EAAMG,GAAMiC,OACpB+C,MAAO,IAEX,IAAIC,EAASpF,EAAMG,GAAMiF,OACrBC,EAAab,EAAKQ,MAAMM,WAAU,SAACC,EAAGC,GACtC,OAAOD,EAAE9G,OAAS1B,KAXW,WAaxB0I,GACL,IAAIhH,EAAO2G,EAAOK,GACJ,KAAXhH,EAAK,KACJA,EAAOA,EAAKiH,UAAU,EAAGjH,EAAKkH,SAElC,IAAIC,EAAapB,EAAKQ,MAAMM,WAAU,SAACnF,EAAMqF,GACzC,OAAOrF,EAAK1B,OAASA,MAEP,GAAfmH,GACCpB,EAAKQ,MAAMnF,KAAK,CACZpB,KAAMA,EACN0G,MAAO,IAEXX,EAAKS,MAAMpF,KAAK,CACZgG,OAAQR,EACRnG,OAAQsF,EAAKQ,MAAMM,WAAU,SAACnF,EAAMqF,GAChC,OAAOrF,EAAK1B,OAASA,QAI7B+F,EAAKS,MAAMpF,KAAK,CACZgG,OAAQR,EACRnG,OAAQ0G,KAtBpB,IAAK,IAAIH,KAASL,EAAS,EAAlBK,IAXb,IAAK,IAAItF,KAAQH,EAAQ,EAAhBG,MAwCN,IAgIQ2F,EAhIf,4MAEIC,KAAO,SAACC,GAiBJ,OAAOjB,EAAGgB,OACLjG,GAAG,SAjBR,SAAqByF,GACbR,EAAGhG,MAAMkH,QAAQD,EAAWE,YAAY,IAAKC,UACjDZ,EAAEa,GAAKb,EAAEc,EACTd,EAAEe,GAAKf,EAAEgB,KAeRzG,GAAG,QAbR,SAAiByF,GACbA,EAAEa,GAAKrB,EAAGhG,MAAMsH,EAChBd,EAAEe,GAAKvB,EAAGhG,MAAMwH,KAYfzG,GAAG,OATR,SAAmByF,GACVR,EAAGhG,MAAMkH,QAAQD,EAAWE,YAAY,GAC7CX,EAAEa,GAAK,KACPb,EAAEe,GAAK,SAhBnB,oDAyBUtB,EAAOC,GACT,IAEMuB,EAAYvB,EAAM9H,KAAI,SAAAoI,GAAC,OAAIkB,OAAOC,OAAOnB,MACzCoB,EAAY3B,EAAM7H,KAAI,SAAAoI,GAAC,OAAIkB,OAAOC,OAAOnB,MAEzCqB,EAAM7B,EAAG2B,OAAO,OACjBG,KAAK,UAAW,CAAC,EAAG,EANZ,KACE,OAOXC,EAAOF,EAAIG,OAAO,YACtB,IAAK,IAAIC,KAAQhC,EACW,GAArBA,EAAMgC,GAAM7B,OACX2B,EAAKC,OAAO,eACPF,KAAK,KAAM7B,EAAMgC,GAAMvI,MACvBoI,KAAK,QAAS,GACdA,KAAK,SAAU,GACfE,OAAO,aACPF,KAAK,aAAc7B,EAAMgC,GAAM5E,QAC/ByE,KAAK,QAAS,KACdA,KAAK,SAAU,KACfA,KAAK,IAAK,GACVA,KAAK,IAAK,GAIvB,IAAMI,EAAOL,EAAIG,OAAO,KACnBF,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBK,UAAU,QACV1C,KAAKgC,GACLW,KAAK,QACLN,KAAK,gBAAgB,SAAAtB,GAAC,OAAI6B,KAAKC,KAAK9B,EAAElH,UAcrC2H,EAAajB,EAAGuC,gBAAgBX,GACjCY,MAAM,OAAQxC,EAAGyC,YAAYvC,MAAMA,GAAO3I,IAAG,SAAAiJ,GAAO,OAAOA,EAAEkC,SAAUC,SAAS,MAChFH,MAAM,SAAUxC,EAAG4C,iBACnBJ,MAAM,SAAUxC,EAAG6C,YAAYnK,IAAUoK,MAE9C7B,EAAWlG,GAAG,QAAQ,WAClBmH,EACKJ,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAEM,OAAOQ,KACzBQ,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAEM,OAAOU,KACzBM,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAErG,OAAOmH,KACzBQ,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAErG,OAAOqH,KAE9BS,EACKH,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAEc,KAClBQ,KAAK,MAAM,SAAAtB,GAAC,OAAIA,EAAEgB,QAE3B,IAAMuB,EAAY/C,EAAGgD,OAAO,QACvBhB,OAAO,OACPrK,MAAM,UAAW,MACjBA,MAAM,WAAY,YAClBA,MAAM,aAAc,UAEnBsK,EAAOJ,EAAIG,OAAO,KACnBF,KAAK,SAAU,QACfA,KAAK,iBAAkB,KACvBK,UAAU,UACV1C,KAAKmC,GACLQ,KAAK,UACLN,KAAK,KAlCK,SAACG,GACZ,OAAkB,GAAdA,EAAK7B,MACE,GACJ,OAgCN0B,KAAK,QAzCI,SAACG,GACX,OAAkB,GAAdA,EAAK7B,MACEJ,EAAGiD,MAAM,QACb,QAAUhB,EAAKvI,KAAO,OAuC5BwJ,KAAKtL,KAAKoJ,KAAKC,IAapB,OAXAgB,EAAKlH,GAAG,aAAa,SAACkH,GACA,IAAfA,EAAK7B,QACJ2C,EAAUI,KAAKlB,EAAKvI,MACpBqJ,EAAUpL,MAAM,aAAc,WAC9BoL,EAAUpL,MAAM,MAAQqI,EAAGhG,MAAMwH,EAAE,GAAI,MAAM7J,MAAM,OAASqI,EAAGhG,MAAMsH,EAAE,GAAI,UAG9EvG,GAAG,YAAY,WACZ,OAAOgI,EAAUpL,MAAM,aAAc,aAGtCkK,EAAII,SAjHnB,0CAqHqBmB,SAASC,eAAe,SAEhCC,YAAY1L,KAAK2L,MAAM9D,EAAKQ,MAAOR,EAAKS,UAvHrD,+BA2HQ,OACI,yBAAK3I,GAAG,cA5HpB,GAA0BU,aCkBX6G,EAvDf,kDACI,aAAe,IAAD,8BACV,gBA0BJ0E,eAAiB,WACb,IAAIhM,EAAY,EAAKH,MAAMG,UAC3B,OAAgB,GAAbA,EACQ,kBAAC,EAAD,MACU,GAAbA,EACG,kBAAC,EAAD,MACU,GAAbA,EACG,kBAAC,EAAD,MACU,GAAbA,EAEJ,kBAAC,IAAD,KAAqB,kBAAC,EAAD,OAEJ,GAAbA,EACG,kBAAC,EAAD,MACU,GAAbA,EACG,kBAAC,EAAD,CAAO0E,MAAO,EAAKzC,MAAMyC,QACf,GAAb1E,EACG,kBAAC,EAAD,MACU,GAAbA,EACG,kBAAC,EAAD,CAAY0E,MAAO,EAAKzC,MAAMyC,MAAO6D,QAAS,EAAKA,UACzC,GAAbvI,EACG,kBAAC,EAAD,WADN,GA7CL,EAAKiC,MAAQ,CACTyC,MAAO,CAAC,MAAO,UAAW,eAE9B,EAAK6D,QAAU,SAACxC,GACZ,IAAMkG,EAAU,EAAKhK,MAAMyC,MAC3BuH,EAAQ3I,KAAKyC,GACb,EAAKrD,SAAS,CACVgC,MAAOuH,KATL,EADlB,gEAcyB,IAAD,OACA7K,EAAS0B,WAAWC,IAAI,QAChCuC,aAAa,QAAQC,KAAK,SAAS,SAAC/B,GACxC,IAAIC,EAAQD,EAASE,MACjBuI,EAAU,EAAKhK,MAAMyC,MACzB,IAAK,IAAId,KAAQH,EACTwI,EAAQvG,SAASjC,EAAMG,GAAMmC,OAC7BkG,EAAQ3I,KAAKG,EAAMG,GAAMmC,MAGjC,EAAKrD,SAAS,CAACgC,MAAOuH,SAxBlC,+BAoDQ,OAAQ7L,KAAK4L,qBApDrB,GAA0BvL,a,gBCIX8G,G,OAZf,uKAEQ,OACI,6BACI,4BAAQrH,UAAU,2DACd,uBAAGA,UAAU,QAAQgM,KAAK,wCAAuC,kBAAC,IAAD,CAAiBC,KAAMC,OACxF,uBAAGlM,UAAU,QAAQgM,KAAK,2CAA0C,kBAAC,IAAD,CAAiBC,KAAME,aAN/G,GAA4B5L,cC2Eb6L,EA3Ef,kDACE,aAAc,IAAD,8BACX,gBACKrK,MAAQ,CACXjC,UAAW,GAEb,EAAKM,UAAY,SAACP,GAChB,EAAK2C,SAAS,CACZ1C,UAAWD,KAPJ,EADf,qDAuDI,OACE,yBAAKG,UAAY,QACf,yBAAKA,UAAU,UACb,4DAEF,yBAAKA,UAAY,WACf,kBAAC,EAAD,CAASS,KA9CF,CACb,CACEZ,GAAI,EACJS,MAAO,QAET,CACET,GAAI,EACJS,MAAO,SAET,CACET,GAAI,EACJS,MAAO,UAET,CACET,GAAI,EACJS,MAAO,YAET,CACET,GAAI,EACJS,MAAO,aAET,CACET,GAAI,EACJS,MAAO,SAET,CACET,GAAI,EACJS,MAAO,aAET,CACET,GAAI,EACJS,MAAO,eAET,CACET,GAAI,EACJS,MAAO,aAYHR,UAAWI,KAAK6B,MAAMjC,UACtBM,UAAWF,KAAKE,aAElB,yBAAKJ,UAAY,aACf,kBAAC,EAAD,CAAMF,UAAWI,KAAK6B,MAAMjC,aAE9B,yBAAKE,UAAU,UACb,kBAAC,EAAD,YArEV,GAAyBO,aCML8L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlB,SAASC,eAAe,SDwHpB,kBAAmBkB,WACrBA,UAAUC,cAAcC,MACrBzH,MAAK,SAAA0H,GACJA,EAAaC,gBAEd/E,OAAM,SAAAgF,GACLvF,QAAQuF,MAAMA,EAAMC,c","file":"static/js/main.228fa2c1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Tab extends Component {\r\n    addStyling = () => {\r\n        if(this.props.tab.id == this.props.activeTab) {\r\n            return {backgroundColor: \"gray\"}\r\n        }\r\n        else{\r\n            return {backgroundColor: \"black\"}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='tab' style={this.addStyling()} \r\n                onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\r\n                <h5 className='tab_title'>{this.props.tab.title}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport Tab from './Tab'\r\n\r\nexport class Tablist extends Component {\r\n    render() {\r\n        return this.props.tabs.map((tab) => (\r\n            <Tab tab={tab} \r\n            activeTab={this.props.activeTab} \r\n            changeTab={this.props.changeTab}/>\r\n        ));\r\n    }\r\n}\r\nexport default Tablist;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"ucsb-image\">\r\n                    <img src=\"ucsb.jpg\" alt=\"UCSB\"></img>\r\n                </div>\r\n                <div className=\"home-text\">\r\n                    <h2>Joon's Portfolio</h2>\r\n                    <p>Hi! Welcome to my portfolio website</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <div className=\"profile-image\">\r\n                    <img src=\"profile.png\"></img>\r\n                </div>\r\n                <div className=\"about-text\">\r\n                    <h2>About me</h2>\r\n                    <p>My name is Joon Lee, currently a 4th year at UCSB, studying computer science.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react'\r\n\r\nexport class Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"resume-grid\">\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\">\r\n                        <img src=\"nexa-logo.png\" width=\"200px\"></img>\r\n                    </div>\r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Developer</h3>\r\n                        <p>Developed user interface and server for its main product, 3D printers, using Python, QML, C++ Developed a feature that lets printers and computers to communicate through HTTP protocol Gained experience in working with a team and using task managing software, such as Confluence, Jira, Git, and BitBucket</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\"><img src=\"xponentialworks-logo.jpg\"></img></div>                \r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Development & QA Intern</h3>\r\n                        <p>Gained experience in user testing, continuous integration and deployment, and quality control Familiarized with using Google Cloud Platform, Docker, Kubernetes, and App Engine Developed features and tests for single-page application using Vue.js framework Wrote tests requiring use of GCP with Go Language.</p>\r\n                </div>  \r\n            </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume;","import React, { Component } from 'react'\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport ScrollUpButton from \"react-scroll-up-button\"\r\n\r\nexport class Projects extends Component {\r\n    render() {\r\n        return (\r\n            <SRLWrapper>\r\n            <div className=\"projects-grid\">\r\n                <div className=\"project-img\">\r\n                    <img src=\"navSB.png\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic1.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic2.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic3.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic4.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic5.jpg\"></img>\r\n                </div>\r\n            </div>\r\n            <ScrollUpButton />\r\n            </SRLWrapper>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\nexport default Projects;","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD63-jm_DDZp7m4YKcoxoijQVpodPW_qik\",\r\n    authDomain: \"portfolio-2df59.firebaseapp.com\",\r\n    databaseURL: \"https://portfolio-2df59.firebaseio.com\",\r\n    projectId: \"portfolio-2df59\",\r\n    storageBucket: \"portfolio-2df59.appspot.com\",\r\n    messagingSenderId: \"1058051044143\",\r\n    appId: \"1:1058051044143:web:cd658828d6d2401f58e7da\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport firebase from '../config.js'\r\n\r\nconst options = [\r\n    { value: 'Yes', label: 'Yes' },\r\n    { value: 'No', label: 'No'}\r\n]\r\n\r\nexport class Guestbook extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {name: '', desc: '', msg: '', options: '', posts: []};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    } \r\n      \r\n    handleChange(event){\r\n        if(event.value === undefined){\r\n            this.setState({[event.target.name]: event.target.value});  \r\n        }else{\r\n            this.setState({options: event.value});\r\n        }\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const itemsRef = firebase.database().ref('data');\r\n        var t = firebase.database.ServerValue.TIMESTAMP\r\n        var time = new Date()\r\n        const post = {\r\n            name: this.state.name,\r\n            desc: this.state.desc,\r\n            msg: this.state.msg,\r\n            options: this.state.options,\r\n            time: time.toLocaleString()\r\n        };\r\n        itemsRef.push(post);\r\n        this.setState({\r\n            name: '', desc: '', msg: ''\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        const itemsRef = firebase.database().ref('data');\r\n        itemsRef.on('value', (snapshot) => {\r\n          let items = snapshot.val();\r\n          let newState = [];\r\n          for (let item in items) {\r\n            newState.push({\r\n              id: item,\r\n              name: items[item].name,\r\n              desc: items[item].desc,\r\n              msg: items[item].msg,\r\n              options: items[item].options,\r\n              time: items[item].time\r\n            });\r\n          }\r\n          \r\n          this.setState({\r\n            posts: newState\r\n          });\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n    //only call set state here if it is wrapped in a condition\r\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\r\n        if(this.state.shouldUpdate != prevState.shouldUpdate){\r\n            //same code as above to retrieve the data\r\n            const itemsRef = firebase.database().ref('data');\r\n            itemsRef.on('value', (snapshot) => {\r\n            let items = snapshot.val();\r\n            let newState = [];\r\n            for (let item in items) {\r\n                newState.push({\r\n                id: item,\r\n                name: items[item].name,\r\n                desc: items[item].desc,\r\n                msg: items[item].msg,\r\n                options: items[item].options,\r\n                time: items[item].time\r\n                });\r\n            }\r\n            this.setState({\r\n                posts: newState\r\n            });\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"guestbook\">\r\n                <div className=\"guestform\">\r\n                    <h2 id=\"guestText\">Leave me a message, and let everyone know you visited!</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            What is your name?\r\n                            <input type=\"text\" name=\"name\" required minlength=\"5\" maxlength=\"20\" value={this.state.name} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Tell me a little about yourself.\r\n                            <input type=\"text\" name=\"desc\" value={this.state.desc} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Leave a message to my guestbook!\r\n                            <input type=\"text\" name=\"msg\" required minlength=\"15\" maxlength=\"500\" value={this.state.msg} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Would you like your name and message to be viewable by other guests of this site?\r\n                            <Select name=\"options\" required options={options} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            If you would like me to be able to contact you, Please leave your email. (Your email will not be posted)\r\n                            <input type=\"text\" email=\"email\"/>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Send Message\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"posts\">\r\n                    <div className=\"post\">\r\n                        <ul>\r\n                            {this.state.posts.map((post) => {\r\n                                if (post.options === 'Yes') {\r\n                                    return (\r\n                                        <li key={post.id}>\r\n                                            <h6>{post.time}</h6>\r\n                                            <h3>{post.name}</h3>\r\n                                            <h5>{post.desc}</h5>\r\n                                            <p>{post.msg}</p>\r\n                                        </li>\r\n                                    )        \r\n                                }\r\n                                \r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Guestbook;","import React, { Component, useState } from 'react'\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport ScrollUpButton from \"react-scroll-up-button\"\r\nimport firebase from '../config'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport class Movie extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [],\r\n            lists: [],\r\n            isOpen: false,\r\n            movie: [],\r\n            currentList: 'All',\r\n            movieSearch: '',\r\n            grid: 'repeat(4,auto)',\r\n            visible: 1,\r\n            shouldUpdate: false\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n        this.addToList = this.addToList.bind(this);\r\n        this.displayList = this.displayList.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.loadMore = this.loadMore.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({ movieSearch: event.target.value })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const itemRef = firebase.database().ref('movies');\r\n        itemRef.orderByChild('title').once('value').then((snapshot) => {\r\n            let items = snapshot.val();\r\n            let newState = [];\r\n            for( let item in items) {\r\n                let t = items[item].title.toLowerCase()\r\n                if(t.includes(this.state.movieSearch)){\r\n                    newState.push({\r\n                        id: item,\r\n                        title: items[item].title,\r\n                        director: items[item].director,\r\n                        rating: items[item].rating,\r\n                        poster: items[item].poster\r\n                    })\r\n                }\r\n            }\r\n            this.setState({movies: newState})\r\n            this.setState({movieSearch: ''})\r\n        })\r\n    }\r\n    loadMore() {\r\n        let v = this.state.visible + 1\r\n        this.setState({visible: v, grid: 'repeat(8,auto)', shouldUpdate: true})\r\n    }\r\n    async showModal(id) {\r\n        await this.setState({movie: id});\r\n        if(this.state.isOpen === false){\r\n            this.setState({isOpen: true});\r\n        }\r\n    }\r\n    hideModal() {\r\n        if(this.state.isOpen === true){\r\n            this.setState({isOpen: false});\r\n        }\r\n    }\r\n    addToList(list) {\r\n        const itemRef = firebase.database().ref('list');\r\n        itemRef.orderByChild('list').equalTo(list).once('value').then((snapshot) => {\r\n            let items = snapshot.val();\r\n            let exist = false;\r\n            for (let item in items) {\r\n                if(items[item].movieID == this.state.movie.id){\r\n                    exist = true;\r\n                }\r\n            }\r\n            if(!exist) {\r\n                itemRef.push({\r\n                    movieID: this.state.movie.id,\r\n                    title: this.state.movie.title,\r\n                    list: list\r\n                });\r\n            }\r\n        })\r\n        this.hideModal();\r\n    }\r\n    deleteMovie(id) {\r\n        const itemRef = firebase.database().ref('movies/'+id);\r\n        itemRef.remove();\r\n        const listRef = firebase.database().ref('list');\r\n        listRef.orderByChild('movieID').equalTo(id).once('value').then((snapshot) => {\r\n            let items = snapshot.val();\r\n            for (let item in items) {\r\n                firebase.database().ref('list/'+item).remove();\r\n            }\r\n        })\r\n        this.hideModal();\r\n    }\r\n    async displayList(list){\r\n        let g = this.state.grid;\r\n        this.setState({visible: 1})\r\n        let limit = this.state.visible*8\r\n        if(list == \"All\"){\r\n            const itemsRef = firebase.database().ref('movies');\r\n            itemsRef.limitToFirst(limit).on('value', (snapshot) => {\r\n                let items = snapshot.val();\r\n                let newState = [];\r\n                for (let item in items) {\r\n                    newState.push({\r\n                        id: item,\r\n                        title: items[item].title,\r\n                        director: items[item].director,\r\n                        rating: items[item].rating,\r\n                        poster: items[item].poster\r\n                    })\r\n                }\r\n                this.setState({\r\n                    movies: newState,\r\n                    currentList: list\r\n                });\r\n            })\r\n        }else{\r\n            const itemRef = firebase.database().ref('list');\r\n            let moviesInList = [];\r\n            let newState = [];\r\n            await itemRef.orderByChild('list').equalTo(list).limitToFirst(limit).once('value').then((snapshot) => {\r\n                let items = snapshot.val();            \r\n                for (let item in items){\r\n                    moviesInList.push(items[item].movieID);\r\n                }\r\n                for (let movie in moviesInList){                    \r\n                    firebase.database().ref('movies/'+moviesInList[movie]).once('value').then((snapshot) => {\r\n                        let item = snapshot.val()\r\n                        newState.push({\r\n                            id: moviesInList[movie],\r\n                            title: item.title,\r\n                            director: item.director,\r\n                            rating: item.rating,\r\n                            poster: item.poster\r\n                        })\r\n                    })\r\n                }                \r\n            })\r\n            this.setState({\r\n                movies: newState,\r\n                currentList: list\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ lists: this.props.lists })\r\n        const itemsRef = firebase.database().ref('movies');\r\n        let limit = 8;        \r\n        itemsRef.limitToFirst(limit).on('value', (snapshot) => {\r\n            let items = snapshot.val();\r\n            let newState = [];\r\n            for (let item in items) {\r\n                newState.push({\r\n                    id: item,\r\n                    title: items[item].title,\r\n                    director: items[item].director,\r\n                    rating: items[item].rating,\r\n                    poster: items[item].poster\r\n                })\r\n            }\r\n            this.setState({\r\n                movies: newState\r\n            });\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        //only call set state here if it is wrapped in a condition\r\n        //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\r\n            if(this.state.shouldUpdate != prevState.shouldUpdate){\r\n                //same code as above to retrieve the data\r\n                this.displayList(this.state.currentList);\r\n              \r\n            }\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"movie-header\">\r\n                    <div className=\"sort-dropdown\">\r\n                        <Dropdown drop='down'>\r\n                            <Dropdown.Toggle variant='primary' id=\"sort-list-button\">\r\n                                {this.state.currentList}\r\n                            </Dropdown.Toggle>                \r\n                            <Dropdown.Menu>\r\n                                {this.state.lists.map((list) => {\r\n                                    return (\r\n                                        <Dropdown.Item as=\"button\" onClick={() => this.displayList(list)}>{list}</Dropdown.Item>\r\n                                    )\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <div className=\"search-bar\">\r\n                        <form className=\"movie-search\" onSubmit={this.handleSubmit}>\r\n                            <input type=\"text\" value={this.state.movieSearch} placeholder=\"Search movie\" onChange={this.handleChange}/>\r\n                            <input type=\"submit\" value=\"Search\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            \r\n            <div className=\"movie-grid\" style={{ 'grid-template-columns': this.state.grid }}>\r\n                \r\n                {this.state.movies.map((id) => {                   \r\n                    return (\r\n                        <div className=\"movie\">                            \r\n                            <img src={id.poster} onClick={() => this.showModal(id)}></img>                        \r\n                        </div>\r\n                    )\r\n                })}                         \r\n            </div>\r\n            <Button className=\"load\" variant=\"primary\" onClick={this.loadMore}>Load more</Button>\r\n                <ScrollUpButton /> \r\n                <Modal show={this.state.isOpen} onHide={this.hideModal}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>{this.state.movie.title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <img src={this.state.movie.poster}></img>\r\n                        <div className=\"info\">\r\n                            <h3>IMDB Rating: {this.state.movie.rating}</h3>\r\n                            <h4>Director: {this.state.movie.director}</h4>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Dropdown drop='up'>\r\n                            <Dropdown.Toggle variant=\"primary\" id=\"add-to-list-button\">\r\n                                Add to list\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                {this.state.lists.map((list) => {\r\n                                    if(list !== \"All\"){\r\n                                        return (\r\n                                            <Dropdown.Item as=\"button\" onClick={() => this.addToList(list)}>{list}</Dropdown.Item>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Button variant=\"danger\" onClick={() => this.deleteMovie(this.state.movie.id)}>Delete</Button>\r\n                        <Button variant=\"secondary\" onClick={this.hideModal}>Cancel</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Movie;","import React, { Component } from 'react'\r\nimport firebase from '../config'\r\n\r\nconst axios = require('axios')\r\n\r\nexport class AddMovie extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { movieID: \"\" };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({movieID: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const itemRef = firebase.database().ref('movies');\r\n        itemRef.orderByChild('imdbID').equalTo(this.state.movieID).once('value').then((snapshot) => {\r\n            let items = snapshot.val();\r\n            if (!snapshot.exists()){\r\n                axios.get('https://www.omdbapi.com/?apikey=ec83e25b&i=' + this.state.movieID).then((res) => {\r\n                    const data = res.data;\r\n                    const movie = {\r\n                        imdbID: this.state.movieID,\r\n                        title: data[\"Title\"],\r\n                        director: data[\"Director\"],\r\n                        rating: data[\"imdbRating\"],\r\n                        poster: data[\"Poster\"].toString()\r\n                    };\r\n                    itemRef.push(movie);\r\n                    this.setState({\r\n                        movieID: \"\"\r\n                    });\r\n                }).catch((e)=>{\r\n                    this.setState({\r\n                        movieID: \"\"\r\n                    })\r\n                    console.log(e)\r\n                })\r\n            }else{\r\n                console.log(\"already exist\")\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"add-movie-header\">\r\n                    <h1>Add a New Movie</h1>\r\n                    <p>Enter the IMDB ID of the movie you want to add and press submit</p>\r\n                </div>\r\n                <form className=\"movie-input\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" value={this.state.movieID} placeholder=\"IMDB ID\" onChange={this.handleChange}/>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddMovie;","import React, { useState, Component } from 'react'\r\nimport firebase from '../config'\r\n//import Modal from 'react-modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nexport class CreateList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { lists: [],\r\n                       title: \"\",\r\n                    };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ lists: this.props.lists})\r\n    }\r\n    handleChange(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const list = this.state.lists;\r\n        list.push(this.state.title);\r\n        this.setState({\r\n            lists: list,\r\n            title: \"\"\r\n        })\r\n        this.props.addList.bind(this, this.state.title);\r\n        this.state.title = \"\";  \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"list-header\">\r\n                    <h1>Create a New List of Movies</h1>\r\n                    <p>Enter the title of the list you want to create and press submit</p>\r\n                </div>\r\n                <form className=\"list-input\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" value={this.state.title} placeholder=\"List Title\" onChange={this.handleChange}/>\r\n                    <input type=\"submit\" value=\"Submit\"/>\r\n                </form>         \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateList;","import React, { Component } from 'react'\r\nimport firebase from '../config'\r\n\r\nvar d3 = require('d3');\r\nconst data = {\r\n    nodes: [],\r\n    links: []\r\n}\r\nconst itemRef = firebase.database().ref('GraphViz');\r\nitemRef.once('value').then((snapshot) => {\r\n    let items = snapshot.val();\r\n    for( let item in items) {\r\n        let title = items[item].title.replace(/ /g, \"-\");\r\n        data.nodes.push({\r\n            name: title,\r\n            poster: items[item].poster,\r\n            group: 1\r\n        })\r\n        let actors = items[item].actors;\r\n        let movieIndex = data.nodes.findIndex((d, i) => {\r\n            return d.name === title\r\n        })\r\n        for( let actor in actors) {\r\n            let name = actors[actor];\r\n            if(name[0] == \" \"){\r\n                name = name.substring(1, name.length);\r\n            }\r\n            let actorIndex = data.nodes.findIndex((item, i) => {\r\n                return item.name === name\r\n            })\r\n            if(actorIndex == -1) {\r\n                data.nodes.push({\r\n                    name: name,\r\n                    group: 2\r\n                })\r\n                data.links.push({\r\n                    source: movieIndex,\r\n                    target: data.nodes.findIndex((item, i) => {\r\n                        return item.name === name\r\n                    })\r\n                })\r\n            }else{\r\n                data.links.push({\r\n                    source: movieIndex,\r\n                    target: actorIndex\r\n                })\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport class Demo extends Component {\r\n\r\n    drag = (simulation) => {\r\n        function dragStarted(d) {\r\n            if(!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n        }\r\n        function dragged(d) {\r\n            d.fx = d3.event.x;\r\n            d.fy = d3.event.y;\r\n        }\r\n\r\n        function dragEnded(d) {\r\n            if (!d3.event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n        }\r\n\r\n        return d3.drag()\r\n            .on(\"start\", dragStarted)\r\n            .on(\"drag\", dragged)\r\n            .on(\"end\", dragEnded);\r\n    }\r\n\r\n    chart(nodes, links) {\r\n        const width= 1920;\r\n        const height = 1080;\r\n        const obj_links = links.map(d => Object.create(d));\r\n        const obj_nodes = nodes.map(d => Object.create(d));\r\n\r\n        const svg = d3.create(\"svg\")\r\n            .attr(\"viewBox\", [0, 0, width, height]);\r\n\r\n        var defs = svg.append('svg:defs')\r\n        for( let node in nodes) {\r\n            if(nodes[node].group == 1){\r\n                defs.append(\"svg:pattern\")\r\n                    .attr(\"id\", nodes[node].name)\r\n                    .attr(\"width\", 1)\r\n                    .attr(\"height\", 1)\r\n                    .append(\"svg:image\")\r\n                    .attr(\"xlink:href\", nodes[node].poster)\r\n                    .attr(\"width\", 200)\r\n                    .attr(\"height\", 200)\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"y\", 0);\r\n            }\r\n        }\r\n\r\n        const link = svg.append(\"g\")\r\n            .attr(\"stroke\", \"#999\")\r\n            .attr(\"stroke-opacity\", 0.6)\r\n            .selectAll(\"line\")\r\n            .data(obj_links)\r\n            .join(\"line\")\r\n            .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n        \r\n        const color = (node) => {\r\n            if (node.group == 2)\r\n                return d3.color(\"gray\")\r\n            return \"url(#\" + node.name + \")\";\r\n        }\r\n\r\n        const radius = (node) => {\r\n            if (node.group == 2)\r\n                return 20;\r\n            return 100;\r\n        }\r\n\r\n        const simulation = d3.forceSimulation(obj_nodes)\r\n            .force(\"link\", d3.forceLink().links(links).id(d => { return d.index; }).distance(300))\r\n            .force(\"charge\", d3.forceManyBody())\r\n            .force(\"center\", d3.forceCenter(width /2, height / 2));\r\n        \r\n        simulation.on(\"tick\", () => {\r\n            link\r\n                .attr(\"x1\", d => d.source.x)\r\n                .attr(\"y1\", d => d.source.y)\r\n                .attr(\"x2\", d => d.target.x)\r\n                .attr(\"y2\", d => d.target.y);\r\n\r\n            node\r\n                .attr(\"cx\", d => d.x)\r\n                .attr(\"cy\", d => d.y);\r\n        });\r\n        const actorName = d3.select('body')\r\n            .append('div')\r\n            .style('z-index', '10')\r\n            .style('position', 'absolute')\r\n            .style('visibility', 'hidden')\r\n\r\n        const node = svg.append(\"g\")\r\n            .attr(\"stroke\", \"#fff\")\r\n            .attr(\"stroke-opacity\", 1.5)\r\n            .selectAll(\"circle\")\r\n            .data(obj_nodes)\r\n            .join(\"circle\")\r\n            .attr(\"r\", radius)\r\n            .attr(\"fill\", color)\r\n            .call(this.drag(simulation));\r\n        \r\n        node.on('mouseover', (node) => {\r\n            if(node.group === 2) {\r\n                actorName.text(node.name);\r\n                actorName.style('visibility', 'visible');\r\n                actorName.style('top', (d3.event.y-10)+'px').style('left', (d3.event.x+10)+'px');\r\n            }\r\n        })\r\n            .on('mouseout', () => {\r\n                return actorName.style('visibility', 'hidden');\r\n            })\r\n\r\n        return svg.node();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const elem = document.getElementById(\"mysvg\");\r\n\r\n        elem.appendChild(this.chart(data.nodes, data.links));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mysvg\"></div>\r\n        )\r\n    }\r\n}\r\nexport default Demo;","import React, { Component } from 'react'\r\nimport Home from './Home'\r\nimport About from './About'\r\nimport Resume from './Resume'\r\nimport Projects from './Projects'\r\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\"\r\nimport Guestbook from './Guestbook'\r\nimport Movie from './Movie'\r\nimport AddMovie from './AddMovie'\r\nimport CreateList from './CreateList'\r\nimport Demo from './Demo'\r\nimport firebase from '../config'\r\n\r\n\r\nexport class Body extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lists: ['All', 'Watched', 'WannaWatch']\r\n        }\r\n        this.addList = (list) => {\r\n            const newList = this.state.lists;\r\n            newList.push(list);\r\n            this.setState({\r\n                lists: newList\r\n            })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const itemRef = firebase.database().ref('list');\r\n        itemRef.orderByChild('list').once('value', (snapshot) => {\r\n            let items = snapshot.val();\r\n            let newList = this.state.lists;\r\n            for( let item in items ){\r\n                if(!newList.includes(items[item].list)){\r\n                    newList.push(items[item].list)\r\n                }\r\n            }\r\n            this.setState({lists: newList})\r\n        })\r\n\r\n    }\r\n    displayContent = () => {\r\n        var activeTab = this.props.activeTab\r\n        if(activeTab == 1)\r\n            return <Home/>\r\n        else if(activeTab == 2)\r\n            return <About/>\r\n        else if(activeTab == 3)\r\n            return <Resume/>\r\n        else if(activeTab == 4)\r\n            return (\r\n            <SimpleReactLightbox><Projects/></SimpleReactLightbox>\r\n            )\r\n        else if(activeTab == 5)\r\n            return <Guestbook/>\r\n        else if(activeTab == 6)\r\n            return <Movie lists={this.state.lists}/>\r\n        else if(activeTab == 7)\r\n            return <AddMovie/>\r\n        else if(activeTab == 8)\r\n            return <CreateList lists={this.state.lists} addList={this.addList}/>\r\n        else if(activeTab == 9)\r\n            return <Demo/>\r\n    }\r\n    render() {\r\n        return (this.displayContent());        \r\n    }\r\n}\r\nexport default Body;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport 'w3-css/3/w3.css'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"w3-container w3-padding-64 w3-center w3-black w3-xlarge\">\r\n                    <a className=\"icons\" href=\"https://github.com/jlee122/portfolio\"><FontAwesomeIcon icon={faGithub}/></a>\r\n                    <a className=\"icons\" href=\"https://www.linkedin.com/in/joonlee122/\"><FontAwesomeIcon icon={faLinkedin}/></a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport Tablist from './Components/Tablist';\r\nimport Body from './Components/Body';\r\nimport Footer from './Components/Footer';\r\n\r\nexport class App extends Component {  \r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n    this.changeTab = (id) => {\r\n      this.setState({\r\n        activeTab: id\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    const tabs = [\r\n    {\r\n      id: 1,\r\n      title: 'Home'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'About'\r\n    }, \r\n    {\r\n      id: 3,\r\n      title: 'Resume'\r\n    }, \r\n    {\r\n      id: 4,\r\n      title: 'Projects'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Guestbook'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Movie'\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Add Movie'\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'Create List'\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'GraphViz'\r\n    }\r\n    ]\r\n  \r\n\r\n    return (      \r\n      <div className = \"body\">\r\n        <div className=\"header\">\r\n          <h1>Welcome to Joon's Portfolio</h1>\r\n        </div>\r\n        <div className = \"nav-bar\">\r\n          <Tablist tabs={tabs} \r\n          activeTab={this.state.activeTab} \r\n          changeTab={this.changeTab}/>\r\n        </div>\r\n        <div className = \"main-body\">\r\n          <Body activeTab={this.state.activeTab}/>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}